---
- name: Creating volume groups
  lvg:
    vg: "{{ item.key }}"
    pvs: "{{ item.value.pvs|join(',') }}"
    state: present
  with_dict: "{{ lvm_config['vgs'] }}"
  tags:
    - lvm

- name: Conduct resize test of physical volumes
  shell: "pvresize {{ item }} -v -t"
  with_items: "{{ lvm_config['pvs'] }}"
  changed_when: false
  register: lvm_pvresize_output
  tags:
    - lvm
    - resizefs

- name: Conduct resize test of physical volumes
  shell: "pvresize {{ item.item }}"
  when: '"No change to size of physical volume" not in item.stderr'
  with_items: "{{ lvm_pvresize_output.results }}"
  tags:
    - lvm
    - resizefs

- name: Creating/extending logical volumes
  lvol:
    lv: "{{ item.name }}"
    vg: "{{ item.vg }}"
    size: "{{ item.size }}"
    opts: "{{ item.opts|default('') }}"
    state: present
  with_items: "{{ lvm_config['lvs'] }}"
  tags:
    - lvm
    - resizefs

- name: Format filesystems
  filesystem:
    dev: "{{ item.value.dev }}"
    fstype: "{{ item.value.type }}"
    opts: "{{ item.value.opts }}"
    resizefs: true
  with_dict: "{{ filesystems_config }}"
  tags:
    - filesystems
    - resizefs

- name: Mount filesystems
  mount:
    src: "{{ item.value.dev }}"
    name: "{{ item.value.mountpoint }}"
    opts: "{{ item.value.opts }}"
    fstype: "{{ item.value.fstype }}"
    state: "{{ item.value.state }}"
    passno: "{{ item.value.passno }}"
    dump: "{{ item.value.dump }}"
  with_dict: "{{ mounts_config }}"
  tags:
    - mounts
